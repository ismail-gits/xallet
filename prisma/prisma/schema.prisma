// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String  @id @default(uuid())
  email        String? @unique
  name         String?
  password     String
  phoneNumber  String @unique
  balance      Balance[]
  transactions OnRampTransactions[]
  sentTransfers p2pTransfer[] @relation(name: "FromUserRelation")
  receivedTransfers p2pTransfer[] @relation(name: "ToUserRelation")
}

model Balance {
  id     String @id @default(uuid())
  userId String 
  amount Int
  locked Int
  user   User   @relation(fields: [userId], references: [id])
}

model OnRampTransactions {
  id        String @id @default(uuid())
  status    OnRampStatus
  token     String
  provider  String
  amount    Int
  startTime DateTime
  userId    String
  user      User   @relation(fields: [userId], references: [id])
}

model p2pTransfer {
  id String @id @default(uuid())
  amount Int
  timeStamp DateTime
  fromUserId String
  fromUser User @relation(name: "FromUserRelation", fields: [fromUserId], references: [id])
  toUserId String
  toUser User @relation(name: "ToUserRelation", fields: [toUserId], references: [id])
}

enum OnRampStatus {
  Success
  Failure
  Processing
}

enum AuthType {
  Google
  Github
}